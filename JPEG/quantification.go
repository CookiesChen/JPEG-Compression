package JPEG

var(
	tableY = [8][8]int{
		{16, 11, 10, 16, 24, 40, 51, 61},
		{12, 12, 14, 19, 26, 58, 60, 55},
		{14, 13, 16, 24, 40, 57, 69, 56},
		{14, 17, 22, 29, 51, 87, 80, 62},
		{18, 22, 37, 56, 68, 109, 103, 77},
		{24, 35, 55, 64, 81, 104, 113, 92},
		{49, 64, 78, 87, 103, 121, 120, 101},
		{72, 92, 95, 98, 112, 100, 103, 99}}
	tableU = [8][8]int{
		{17, 18, 24, 47, 99, 99, 99, 99},
		{18, 21, 26, 66, 99, 99, 99, 99},
		{24, 26, 56, 99, 99, 99, 99, 99},
		{47, 66, 99, 99, 99, 99, 99, 99},
		{99, 99, 99, 99, 99, 99, 99, 99},
		{99, 99, 99, 99, 99, 99, 99, 99},
		{99, 99, 99, 99, 99, 99, 99, 99},
		{99, 99, 99, 99, 99, 99, 99, 99}}
)

func quantification(F [8][8]nodeF)(QF [8][8]nodeF) {
	for i := 0; i < 8; i++ {
		for j := 0; j < 8; j++ {
			QF[i][j].yF = int(float32(F[i][j].yF) / float32(tableY[i][j]) + 0.5)
			QF[i][j].uF = int(float32(F[i][j].uF) / float32(tableU[i][j]) + 0.5)
			QF[i][j].vF = int(float32(F[i][j].vF) / float32(tableU[i][j]) + 0.5)
		}
	}
	return QF
}